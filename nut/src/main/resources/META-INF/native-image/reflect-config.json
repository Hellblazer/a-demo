[
{
  "name":"[B"
},
{
  "name":"[J"
},
{
  "name":"[Lcom.fasterxml.jackson.databind.deser.Deserializers;"
},
{
  "name":"[Lcom.fasterxml.jackson.databind.deser.KeyDeserializers;"
},
{
  "name":"[Lcom.fasterxml.jackson.databind.deser.ValueInstantiators;"
},
{
  "name":"[Lcom.fasterxml.jackson.databind.ser.Serializers;"
},
{
  "name":"[Lcom.salesforce.apollo.cryptography.Digest;"
},
{
  "name":"[Lcom.salesforce.apollo.cryptography.Verifier;"
},
{
  "name":"[Ljava.lang.String;"
},
{
  "name":"[Lliquibase.pro.packaged.bW;"
},
{
  "name":"[Lsun.security.pkcs.SignerInfo;"
},
{
  "name":"android.app.Application"
},
{
  "name":"apple.security.AppleProvider",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.classic.BasicConfigurator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.classic.encoder.PatternLayoutEncoder",
  "queryAllPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.classic.joran.SerializedModelConfigurator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.classic.pattern.LineSeparatorConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.classic.pattern.MessageConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.classic.util.DefaultJoranConfigurator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.core.ConsoleAppender",
  "queryAllPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.core.OutputStreamAppender",
  "methods":[{"name":"setEncoder","parameterTypes":["ch.qos.logback.core.encoder.Encoder"] }]
},
{
  "name":"ch.qos.logback.core.encoder.Encoder",
  "methods":[{"name":"valueOf","parameterTypes":["java.lang.String"] }]
},
{
  "name":"ch.qos.logback.core.encoder.LayoutWrappingEncoder",
  "methods":[{"name":"setParent","parameterTypes":["ch.qos.logback.core.spi.ContextAware"] }]
},
{
  "name":"ch.qos.logback.core.pattern.PatternLayoutEncoderBase",
  "methods":[{"name":"setPattern","parameterTypes":["java.lang.String"] }]
},
{
  "name":"ch.qos.logback.core.spi.ContextAware",
  "methods":[{"name":"valueOf","parameterTypes":["java.lang.String"] }]
},
{
  "name":"ch.qos.logback.core.status.NopStatusListener",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.chiralbehaviors.tron.FsmExecutor",
  "methods":[{"name":"fsm","parameterTypes":[] }]
},
{
  "name":"com.datical.liquibase.ext.appdba.markunused.change.MarkUnsedChange",
  "queryAllPublicMethods":true
},
{
  "name":"com.datical.liquibase.ext.appdba.markunused.change.MarkUnsedChangeBeanInfo"
},
{
  "name":"com.datical.liquibase.ext.appdba.markunused.change.MarkUnsedChangeCustomizer"
},
{
  "name":"com.datical.liquibase.ext.appdba.synonym.change.CreateSynonymChange",
  "queryAllPublicMethods":true,
  "methods":[{"name":"isPrivate","parameterTypes":[] }]
},
{
  "name":"com.datical.liquibase.ext.appdba.synonym.change.CreateSynonymChangeBeanInfo"
},
{
  "name":"com.datical.liquibase.ext.appdba.synonym.change.CreateSynonymChangeCustomizer"
},
{
  "name":"com.datical.liquibase.ext.appdba.synonym.change.DropSynonymChange",
  "queryAllPublicMethods":true,
  "methods":[{"name":"isPrivate","parameterTypes":[] }]
},
{
  "name":"com.datical.liquibase.ext.appdba.synonym.change.DropSynonymChangeBeanInfo"
},
{
  "name":"com.datical.liquibase.ext.appdba.synonym.change.DropSynonymChangeCustomizer"
},
{
  "name":"com.datical.liquibase.ext.license.LicenseValidationChange",
  "queryAllPublicMethods":true
},
{
  "name":"com.datical.liquibase.ext.license.LicenseValidationChangeBeanInfo"
},
{
  "name":"com.datical.liquibase.ext.license.LicenseValidationChangeCustomizer"
},
{
  "name":"com.datical.liquibase.ext.storedlogic.checkconstraint.change.AddCheckConstraintChange",
  "queryAllPublicMethods":true
},
{
  "name":"com.datical.liquibase.ext.storedlogic.checkconstraint.change.AddCheckConstraintChangeBeanInfo"
},
{
  "name":"com.datical.liquibase.ext.storedlogic.checkconstraint.change.AddCheckConstraintChangeCustomizer"
},
{
  "name":"com.datical.liquibase.ext.storedlogic.checkconstraint.change.DisableCheckConstraintChange",
  "queryAllPublicMethods":true
},
{
  "name":"com.datical.liquibase.ext.storedlogic.checkconstraint.change.DisableCheckConstraintChangeBeanInfo"
},
{
  "name":"com.datical.liquibase.ext.storedlogic.checkconstraint.change.DisableCheckConstraintChangeCustomizer"
},
{
  "name":"com.datical.liquibase.ext.storedlogic.checkconstraint.change.DropCheckConstraintChange",
  "queryAllPublicMethods":true
},
{
  "name":"com.datical.liquibase.ext.storedlogic.checkconstraint.change.DropCheckConstraintChangeBeanInfo"
},
{
  "name":"com.datical.liquibase.ext.storedlogic.checkconstraint.change.DropCheckConstraintChangeCustomizer"
},
{
  "name":"com.datical.liquibase.ext.storedlogic.checkconstraint.change.EnableCheckConstraintChange",
  "queryAllPublicMethods":true
},
{
  "name":"com.datical.liquibase.ext.storedlogic.checkconstraint.change.EnableCheckConstraintChangeBeanInfo"
},
{
  "name":"com.datical.liquibase.ext.storedlogic.checkconstraint.change.EnableCheckConstraintChangeCustomizer"
},
{
  "name":"com.datical.liquibase.ext.storedlogic.databasepackage.change.CreatePackageBodyChange",
  "queryAllPublicMethods":true
},
{
  "name":"com.datical.liquibase.ext.storedlogic.databasepackage.change.CreatePackageBodyChangeBeanInfo"
},
{
  "name":"com.datical.liquibase.ext.storedlogic.databasepackage.change.CreatePackageBodyChangeCustomizer"
},
{
  "name":"com.datical.liquibase.ext.storedlogic.databasepackage.change.CreatePackageChange",
  "queryAllPublicMethods":true
},
{
  "name":"com.datical.liquibase.ext.storedlogic.databasepackage.change.CreatePackageChangeBeanInfo"
},
{
  "name":"com.datical.liquibase.ext.storedlogic.databasepackage.change.CreatePackageChangeCustomizer"
},
{
  "name":"com.datical.liquibase.ext.storedlogic.databasepackage.change.DropPackageBodyChange",
  "queryAllPublicMethods":true
},
{
  "name":"com.datical.liquibase.ext.storedlogic.databasepackage.change.DropPackageBodyChangeBeanInfo"
},
{
  "name":"com.datical.liquibase.ext.storedlogic.databasepackage.change.DropPackageBodyChangeCustomizer"
},
{
  "name":"com.datical.liquibase.ext.storedlogic.databasepackage.change.DropPackageChange",
  "queryAllPublicMethods":true
},
{
  "name":"com.datical.liquibase.ext.storedlogic.databasepackage.change.DropPackageChangeBeanInfo"
},
{
  "name":"com.datical.liquibase.ext.storedlogic.databasepackage.change.DropPackageChangeCustomizer"
},
{
  "name":"com.datical.liquibase.ext.storedlogic.function.change.CreateFunctionChange",
  "queryAllPublicMethods":true
},
{
  "name":"com.datical.liquibase.ext.storedlogic.function.change.CreateFunctionChangeBeanInfo"
},
{
  "name":"com.datical.liquibase.ext.storedlogic.function.change.CreateFunctionChangeCustomizer"
},
{
  "name":"com.datical.liquibase.ext.storedlogic.function.change.DropFunctionChange",
  "queryAllPublicMethods":true
},
{
  "name":"com.datical.liquibase.ext.storedlogic.function.change.DropFunctionChangeBeanInfo"
},
{
  "name":"com.datical.liquibase.ext.storedlogic.function.change.DropFunctionChangeCustomizer"
},
{
  "name":"com.datical.liquibase.ext.storedlogic.trigger.change.CreateTriggerChange",
  "queryAllPublicMethods":true
},
{
  "name":"com.datical.liquibase.ext.storedlogic.trigger.change.CreateTriggerChangeBeanInfo"
},
{
  "name":"com.datical.liquibase.ext.storedlogic.trigger.change.CreateTriggerChangeCustomizer"
},
{
  "name":"com.datical.liquibase.ext.storedlogic.trigger.change.DisableTriggerChange",
  "queryAllPublicMethods":true
},
{
  "name":"com.datical.liquibase.ext.storedlogic.trigger.change.DisableTriggerChangeBeanInfo"
},
{
  "name":"com.datical.liquibase.ext.storedlogic.trigger.change.DisableTriggerChangeCustomizer"
},
{
  "name":"com.datical.liquibase.ext.storedlogic.trigger.change.DropTriggerChange",
  "queryAllPublicMethods":true
},
{
  "name":"com.datical.liquibase.ext.storedlogic.trigger.change.DropTriggerChangeBeanInfo"
},
{
  "name":"com.datical.liquibase.ext.storedlogic.trigger.change.DropTriggerChangeCustomizer"
},
{
  "name":"com.datical.liquibase.ext.storedlogic.trigger.change.EnableTriggerChange",
  "queryAllPublicMethods":true
},
{
  "name":"com.datical.liquibase.ext.storedlogic.trigger.change.EnableTriggerChangeBeanInfo"
},
{
  "name":"com.datical.liquibase.ext.storedlogic.trigger.change.EnableTriggerChangeCustomizer"
},
{
  "name":"com.datical.liquibase.ext.storedlogic.trigger.change.RenameTriggerChange",
  "queryAllPublicMethods":true
},
{
  "name":"com.datical.liquibase.ext.storedlogic.trigger.change.RenameTriggerChangeBeanInfo"
},
{
  "name":"com.datical.liquibase.ext.storedlogic.trigger.change.RenameTriggerChangeCustomizer"
},
{
  "name":"com.fasterxml.jackson.databind.ext.Java7SupportImpl",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.github.benmanes.caffeine.cache.BLCHeader$DrainStatusRef",
  "fields":[{"name":"drainStatus"}]
},
{
  "name":"com.github.benmanes.caffeine.cache.BaseMpscLinkedArrayQueueColdProducerFields",
  "fields":[{"name":"producerLimit"}]
},
{
  "name":"com.github.benmanes.caffeine.cache.BaseMpscLinkedArrayQueueConsumerFields",
  "fields":[{"name":"consumerIndex"}]
},
{
  "name":"com.github.benmanes.caffeine.cache.BaseMpscLinkedArrayQueueProducerFields",
  "fields":[{"name":"producerIndex"}]
},
{
  "name":"com.github.benmanes.caffeine.cache.BoundedLocalCache",
  "fields":[{"name":"refreshes"}]
},
{
  "name":"com.github.benmanes.caffeine.cache.CacheLoader",
  "methods":[{"name":"loadAll","parameterTypes":["java.util.Set"] }]
},
{
  "name":"com.github.benmanes.caffeine.cache.PS",
  "fields":[{"name":"key"}, {"name":"value"}]
},
{
  "name":"com.github.benmanes.caffeine.cache.PSW",
  "fields":[{"name":"writeTime"}]
},
{
  "name":"com.github.benmanes.caffeine.cache.PSWMS",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.github.benmanes.caffeine.cache.SSLMSW",
  "methods":[{"name":"<init>","parameterTypes":["com.github.benmanes.caffeine.cache.Caffeine","com.github.benmanes.caffeine.cache.AsyncCacheLoader","boolean"] }]
},
{
  "name":"com.github.benmanes.caffeine.cache.StripedBuffer",
  "fields":[{"name":"tableBusy"}]
},
{
  "name":"com.google.common.util.concurrent.AbstractFuture",
  "fields":[{"name":"listeners"}, {"name":"value"}, {"name":"waiters"}]
},
{
  "name":"com.google.common.util.concurrent.AbstractFuture$Waiter",
  "fields":[{"name":"next"}, {"name":"thread"}]
},
{
  "name":"com.google.protobuf.ExtensionRegistry",
  "methods":[{"name":"getEmptyRegistry","parameterTypes":[] }]
},
{
  "name":"com.hellblazer.nut.SkyApplicationTest",
  "allDeclaredFields":true,
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"smokin","parameterTypes":[] }]
},
{
  "name":"com.hellblazer.nut.SkyConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.hellblazer.nut.SkyConfiguration$IdentityConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"com.hellblazer.nut.SkyConfiguration$Shamir",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"com.hellblazer.nut.SkyTest",
  "allDeclaredFields":true,
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"after","parameterTypes":[] }, {"name":"before","parameterTypes":[] }, {"name":"smokin","parameterTypes":[] }, {"name":"suite","parameterTypes":[] }]
},
{
  "name":"com.hellblazer.nut.Sphinx$UNWRAPPING",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"com.hellblazer.nut.SphinxTest",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"smokin","parameterTypes":[] }]
},
{
  "name":"com.ibm.icu.text.Collator"
},
{
  "name":"com.intellij.junit5.JUnit5IdeaTestRunner",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.intellij.rt.execution.application.AppMainV2$Agent",
  "methods":[{"name":"premain","parameterTypes":["java.lang.String","java.lang.instrument.Instrumentation"] }]
},
{
  "name":"com.salesforce.apollo.archipelago.ServerConnectionCache$Builder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"com.salesforce.apollo.archipelago.ServerConnectionCache$ServerConnectionCacheMetrics",
  "queryAllDeclaredMethods":true
},
{
  "name":"com.salesforce.apollo.archipelago.ServerConnectionCache$ServerConnectionFactory",
  "queryAllDeclaredMethods":true
},
{
  "name":"com.salesforce.apollo.choam.Parameters$BootstrapParameters",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"com.salesforce.apollo.choam.Parameters$Builder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"com.salesforce.apollo.choam.Parameters$LimiterBuilder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"com.salesforce.apollo.choam.Parameters$MvStoreBuilder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"com.salesforce.apollo.choam.Parameters$ProducerParameters",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"com.salesforce.apollo.choam.fsm.Combine$Merchantile",
  "methods":[{"name":"regenerated","parameterTypes":[] }]
},
{
  "name":"com.salesforce.apollo.choam.fsm.Combine$Merchantile$4",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"start","parameterTypes":[] }]
},
{
  "name":"com.salesforce.apollo.choam.fsm.Combine$Merchantile$5",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"combine","parameterTypes":[] }]
},
{
  "name":"com.salesforce.apollo.choam.fsm.Combine$Merchantile$6",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"cancelTimer","parameterTypes":[] }, {"name":"regenerate","parameterTypes":[] }, {"name":"synchronizeContext","parameterTypes":[] }]
},
{
  "name":"com.salesforce.apollo.choam.fsm.Combine$Merchantile$7",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"combine","parameterTypes":[] }, {"name":"regenerateView","parameterTypes":[] }]
},
{
  "name":"com.salesforce.apollo.choam.fsm.Driven$Earner$1",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"checkAssembly","parameterTypes":[] }, {"name":"create","parameterTypes":["java.util.List","boolean"] }]
},
{
  "name":"com.salesforce.apollo.choam.fsm.Driven$Earner$4",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"start","parameterTypes":[] }]
},
{
  "name":"com.salesforce.apollo.choam.fsm.Driven$Earner$6",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"assembled","parameterTypes":[] }, {"name":"newEpoch","parameterTypes":["int","int"] }, {"name":"startProduction","parameterTypes":[] }, {"name":"viewComplete","parameterTypes":[] }]
},
{
  "name":"com.salesforce.apollo.choam.fsm.Driven$Transitions",
  "methods":[{"name":"create","parameterTypes":["java.util.List","boolean"] }]
},
{
  "name":"com.salesforce.apollo.choam.fsm.Genesis$BrickLayer$1",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"certify","parameterTypes":[] }, {"name":"process","parameterTypes":["java.util.List","boolean"] }]
},
{
  "name":"com.salesforce.apollo.choam.fsm.Genesis$BrickLayer$3",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"gather","parameterTypes":[] }, {"name":"nextEpoch","parameterTypes":["java.lang.Integer"] }, {"name":"process","parameterTypes":["java.util.List","boolean"] }]
},
{
  "name":"com.salesforce.apollo.choam.fsm.Genesis$BrickLayer$4",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"nextEpoch","parameterTypes":["java.lang.Integer"] }, {"name":"nominate","parameterTypes":[] }, {"name":"process","parameterTypes":["java.util.List","boolean"] }]
},
{
  "name":"com.salesforce.apollo.choam.fsm.Genesis$BrickLayer$5",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"publish","parameterTypes":[] }]
},
{
  "name":"com.salesforce.apollo.choam.fsm.Reconfiguration$Reconfigure$1",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"assembled","parameterTypes":[] }]
},
{
  "name":"com.salesforce.apollo.choam.fsm.Reconfiguration$Reconfigure$2",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"certified","parameterTypes":[] }, {"name":"certify","parameterTypes":[] }, {"name":"validation","parameterTypes":[] }]
},
{
  "name":"com.salesforce.apollo.choam.fsm.Reconfiguration$Reconfigure$3",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"assembly","parameterTypes":[] }, {"name":"gathered","parameterTypes":[] }]
},
{
  "name":"com.salesforce.apollo.choam.fsm.Reconfiguration$Reconfigure$4",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"nominate","parameterTypes":[] }, {"name":"nominated","parameterTypes":[] }]
},
{
  "name":"com.salesforce.apollo.choam.fsm.Reconfiguration$Reconfigure$6",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"complete","parameterTypes":[] }, {"name":"elect","parameterTypes":[] }]
},
{
  "name":"com.salesforce.apollo.choam.fsm.Reconfiguration$Reconfigure$7",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"complete","parameterTypes":[] }, {"name":"completion","parameterTypes":[] }]
},
{
  "name":"com.salesforce.apollo.choam.support.ExponentialBackoffPolicy$Builder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"com.salesforce.apollo.cryptography.Digest",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"com.salesforce.apollo.cryptography.DigestAlgorithm",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"com.salesforce.apollo.cryptography.EncryptionAlgorithm",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"com.salesforce.apollo.cryptography.SignatureAlgorithm",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"com.salesforce.apollo.cryptography.Signer",
  "queryAllDeclaredMethods":true
},
{
  "name":"com.salesforce.apollo.cryptography.Verifier",
  "queryAllDeclaredMethods":true
},
{
  "name":"com.salesforce.apollo.delphinius.AbstractOracle",
  "queryAllPublicMethods":true,
  "methods":[{"name":"addAssertion","parameterTypes":["java.sql.Connection","java.lang.String","java.lang.String","java.lang.String","java.lang.String","java.lang.String","java.lang.String","java.lang.String","java.lang.String"] }, {"name":"addNamespace","parameterTypes":["java.sql.Connection","java.lang.String"] }, {"name":"deleteAssertion","parameterTypes":["java.sql.Connection","java.lang.String","java.lang.String","java.lang.String","java.lang.String","java.lang.String","java.lang.String","java.lang.String","java.lang.String"] }, {"name":"deleteSubject","parameterTypes":["java.sql.Connection","java.lang.String","java.lang.String","java.lang.String","java.lang.String"] }, {"name":"mapSubject","parameterTypes":["java.sql.Connection","java.lang.String","java.lang.String","java.lang.String","java.lang.String","java.lang.String","java.lang.String","java.lang.String","java.lang.String"] }, {"name":"removeSubject","parameterTypes":["java.sql.Connection","java.lang.String","java.lang.String","java.lang.String","java.lang.String","java.lang.String","java.lang.String","java.lang.String","java.lang.String"] }]
},
{
  "name":"com.salesforce.apollo.delphinius.DomainMaintenance",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.salesforce.apollo.ethereal.Config$Builder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"com.salesforce.apollo.ethereal.WeakThresholdKey",
  "queryAllDeclaredMethods":true
},
{
  "name":"com.salesforce.apollo.gorgoneion.Parameters$Builder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"com.salesforce.apollo.membership.Context$Builder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"com.salesforce.apollo.membership.messaging.rbc.ReliableBroadcaster$Parameters",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"com.salesforce.apollo.model.ProcessDomain$ProcessDomainParameters",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["java.lang.String","java.time.Duration","java.lang.String","java.nio.file.Path","java.time.Duration","double","java.time.Duration","int","int","double"] }, {"name":"<init>","parameterTypes":["java.lang.String","java.time.Duration","java.nio.file.Path","java.time.Duration","double","java.time.Duration","int","int","double"] }]
},
{
  "name":"com.salesforce.apollo.state.SqlStateMachine",
  "queryAllPublicMethods":true
},
{
  "name":"com.salesforce.apollo.state.liquibase.MigrationAccessor",
  "allPublicFields":true
},
{
  "name":"com.salesforce.apollo.state.liquibase.ReplicatedChangeLogHistoryService",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.salesforce.apollo.stereotomy.KEL",
  "queryAllDeclaredMethods":true
},
{
  "name":"com.salesforce.apollo.stereotomy.KERL",
  "queryAllDeclaredMethods":true
},
{
  "name":"com.salesforce.apollo.stereotomy.caching.CachingKEL$1"
},
{
  "name":"com.salesforce.apollo.stereotomy.caching.CachingKEL$2"
},
{
  "name":"com.salesforce.apollo.stereotomy.db.UniKERL",
  "queryAllPublicMethods":true,
  "methods":[{"name":"appendEvent","parameterTypes":["java.sql.Connection","byte[]","java.lang.String","int"] }, {"name":"initializeKERL","parameterTypes":["java.sql.Connection"] }]
},
{
  "name":"com.sun.crypto.provider.AESCipher$General",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.sun.crypto.provider.ARCFOURCipher",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.sun.crypto.provider.ChaCha20Cipher$ChaCha20Poly1305",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.sun.crypto.provider.DESCipher",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.sun.crypto.provider.DESedeCipher",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.sun.crypto.provider.DHParameters",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.sun.crypto.provider.GaloisCounterMode$AESGCM",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.sun.crypto.provider.JceKeyStore",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.sun.crypto.provider.PBEParameters",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.sun.crypto.provider.TlsMasterSecretGenerator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.sun.org.apache.xerces.internal.impl.dv.xs.ExtendedSchemaDVFactoryImpl",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.sun.org.apache.xerces.internal.impl.dv.xs.SchemaDVFactoryImpl",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.sun.org.apache.xerces.internal.jaxp.SAXParserFactoryImpl",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.sun.rowset.providers.RIOptimisticProvider",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"deterministic.org.h2.Driver"
},
{
  "name":"deterministic.org.h2.mvstore.MVStore$TxCounter",
  "fields":[{"name":"counter"}]
},
{
  "name":"deterministic.org.h2.mvstore.Page",
  "fields":[{"name":"pos"}]
},
{
  "name":"io.grpc.census.InternalCensusStatsAccessor"
},
{
  "name":"io.grpc.census.InternalCensusTracingAccessor"
},
{
  "name":"io.grpc.inprocess.InProcessChannelBuilder",
  "methods":[{"name":"delegate","parameterTypes":[] }]
},
{
  "name":"io.grpc.internal.DnsNameResolverProvider"
},
{
  "name":"io.grpc.internal.PickFirstLoadBalancerProvider"
},
{
  "name":"io.grpc.internal.SerializingExecutor",
  "fields":[{"name":"runState"}]
},
{
  "name":"io.grpc.override.ContextStorageOverride"
},
{
  "name":"io.grpc.util.SecretRoundRobinLoadBalancerProvider$Provider"
},
{
  "name":"io.netty.bootstrap.ServerBootstrap$1"
},
{
  "name":"io.netty.bootstrap.ServerBootstrap$ServerBootstrapAcceptor",
  "methods":[{"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, {"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }]
},
{
  "name":"io.netty.buffer.AbstractByteBufAllocator",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.netty.channel.AbstractChannelHandlerContext",
  "fields":[{"name":"handlerState"}]
},
{
  "name":"io.netty.channel.ChannelInboundHandlerAdapter",
  "methods":[{"name":"channelActive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"channelInactive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, {"name":"channelReadComplete","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"channelRegistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"channelUnregistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"channelWritabilityChanged","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"userEventTriggered","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }]
},
{
  "name":"io.netty.channel.ChannelInitializer",
  "methods":[{"name":"channelRegistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }]
},
{
  "name":"io.netty.channel.ChannelOutboundBuffer",
  "fields":[{"name":"totalPendingSize"}, {"name":"unwritable"}]
},
{
  "name":"io.netty.channel.DefaultChannelConfig",
  "fields":[{"name":"autoRead"}, {"name":"writeBufferWaterMark"}]
},
{
  "name":"io.netty.channel.DefaultChannelPipeline",
  "fields":[{"name":"estimatorHandle"}]
},
{
  "name":"io.netty.channel.DefaultChannelPipeline$HeadContext",
  "methods":[{"name":"bind","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.net.SocketAddress","io.netty.channel.ChannelPromise"] }, {"name":"channelActive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"channelInactive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, {"name":"channelReadComplete","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"channelRegistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"channelUnregistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"channelWritabilityChanged","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"close","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, {"name":"connect","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.net.SocketAddress","java.net.SocketAddress","io.netty.channel.ChannelPromise"] }, {"name":"deregister","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, {"name":"disconnect","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, {"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }, {"name":"flush","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"read","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"userEventTriggered","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, {"name":"write","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object","io.netty.channel.ChannelPromise"] }]
},
{
  "name":"io.netty.channel.DefaultChannelPipeline$TailContext",
  "methods":[{"name":"channelActive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"channelInactive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, {"name":"channelReadComplete","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"channelRegistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"channelUnregistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"channelWritabilityChanged","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }, {"name":"userEventTriggered","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }]
},
{
  "name":"io.netty.channel.epoll.Epoll"
},
{
  "name":"io.netty.util.AbstractReferenceCounted",
  "fields":[{"name":"refCnt"}]
},
{
  "name":"io.netty.util.DefaultAttributeMap",
  "fields":[{"name":"attributes"}]
},
{
  "name":"io.netty.util.concurrent.DefaultPromise",
  "fields":[{"name":"result"}]
},
{
  "name":"io.netty.util.concurrent.SingleThreadEventExecutor",
  "fields":[{"name":"state"}, {"name":"threadProperties"}]
},
{
  "name":"io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueColdProducerFields",
  "fields":[{"name":"producerLimit"}]
},
{
  "name":"io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueConsumerFields",
  "fields":[{"name":"consumerIndex"}]
},
{
  "name":"io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueProducerFields",
  "fields":[{"name":"producerIndex"}]
},
{
  "name":"io.perfmark.impl.SecretPerfMarkImpl$PerfMarkImpl"
},
{
  "name":"java.beans.PropertyVetoException"
},
{
  "name":"java.io.FilePermission"
},
{
  "name":"java.io.Serializable",
  "queryAllDeclaredMethods":true
},
{
  "name":"java.lang.Class",
  "methods":[{"name":"getRecordComponents","parameterTypes":[] }]
},
{
  "name":"java.lang.Cloneable",
  "queryAllDeclaredMethods":true
},
{
  "name":"java.lang.Comparable",
  "queryAllDeclaredMethods":true
},
{
  "name":"java.lang.Object",
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.ObjectBeanInfo"
},
{
  "name":"java.lang.ObjectCustomizer"
},
{
  "name":"java.lang.ProcessHandle",
  "methods":[{"name":"current","parameterTypes":[] }, {"name":"pid","parameterTypes":[] }]
},
{
  "name":"java.lang.Record",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"java.lang.RuntimePermission"
},
{
  "name":"java.lang.String"
},
{
  "name":"java.lang.Thread",
  "fields":[{"name":"threadLocalRandomProbe"}]
},
{
  "name":"java.lang.reflect.RecordComponent",
  "methods":[{"name":"getName","parameterTypes":[] }, {"name":"getType","parameterTypes":[] }]
},
{
  "name":"java.net.NetPermission"
},
{
  "name":"java.net.SocketAddress",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"java.net.SocketPermission"
},
{
  "name":"java.net.URLPermission",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.String","java.lang.String"] }]
},
{
  "name":"java.nio.Bits",
  "fields":[{"name":"MAX_MEMORY"}, {"name":"UNALIGNED"}]
},
{
  "name":"java.nio.Buffer",
  "fields":[{"name":"address"}]
},
{
  "name":"java.nio.ByteBuffer",
  "methods":[{"name":"alignedSlice","parameterTypes":["int"] }]
},
{
  "name":"java.nio.DirectByteBuffer",
  "methods":[{"name":"<init>","parameterTypes":["long","long"] }]
},
{
  "name":"java.nio.channels.spi.SelectorProvider",
  "methods":[{"name":"openServerSocketChannel","parameterTypes":["java.net.ProtocolFamily"] }]
},
{
  "name":"java.security.AlgorithmParametersSpi"
},
{
  "name":"java.security.AllPermission"
},
{
  "name":"java.security.KeyStoreSpi"
},
{
  "name":"java.security.MessageDigestSpi"
},
{
  "name":"java.security.SecureRandomParameters"
},
{
  "name":"java.security.SecurityPermission"
},
{
  "name":"java.security.interfaces.DSAPrivateKey"
},
{
  "name":"java.security.interfaces.DSAPublicKey"
},
{
  "name":"java.security.interfaces.RSAPrivateKey"
},
{
  "name":"java.security.interfaces.RSAPublicKey"
},
{
  "name":"java.security.spec.DSAParameterSpec"
},
{
  "name":"java.sql.Date"
},
{
  "name":"java.sql.SQLException",
  "fields":[{"name":"next"}]
},
{
  "name":"java.sql.Timestamp"
},
{
  "name":"java.sql.Types",
  "allPublicFields":true
},
{
  "name":"java.util.ArrayList",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"java.util.Date"
},
{
  "name":"java.util.PropertyPermission"
},
{
  "name":"java.util.concurrent.ForkJoinTask",
  "fields":[{"name":"aux"}, {"name":"status"}]
},
{
  "name":"java.util.concurrent.ScheduledThreadPoolExecutor",
  "methods":[{"name":"setRemoveOnCancelPolicy","parameterTypes":["boolean"] }]
},
{
  "name":"java.util.concurrent.atomic.AtomicBoolean",
  "fields":[{"name":"value"}]
},
{
  "name":"java.util.concurrent.atomic.AtomicReference",
  "fields":[{"name":"value"}]
},
{
  "name":"java.util.concurrent.atomic.LongAdder",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"add","parameterTypes":["long"] }, {"name":"sum","parameterTypes":[] }]
},
{
  "name":"java.util.concurrent.atomic.Striped64",
  "fields":[{"name":"base"}, {"name":"cellsBusy"}]
},
{
  "name":"java.util.concurrent.atomic.Striped64$Cell",
  "fields":[{"name":"value"}]
},
{
  "name":"java.util.function.Predicate",
  "queryAllDeclaredMethods":true
},
{
  "name":"javax.net.ssl.SSLEngine",
  "methods":[{"name":"getApplicationProtocol","parameterTypes":[] }, {"name":"getHandshakeApplicationProtocol","parameterTypes":[] }, {"name":"getHandshakeApplicationProtocolSelector","parameterTypes":[] }, {"name":"setHandshakeApplicationProtocolSelector","parameterTypes":["java.util.function.BiFunction"] }]
},
{
  "name":"javax.net.ssl.SSLParameters",
  "methods":[{"name":"setApplicationProtocols","parameterTypes":["java.lang.String[]"] }]
},
{
  "name":"javax.security.auth.x500.X500Principal",
  "fields":[{"name":"thisX500Name"}],
  "methods":[{"name":"<init>","parameterTypes":["sun.security.x509.X500Name"] }]
},
{
  "name":"javax.smartcardio.CardPermission"
},
{
  "name":"jdk.internal.misc.Unsafe",
  "methods":[{"name":"getUnsafe","parameterTypes":[] }]
},
{
  "name":"libcore.io.Memory"
},
{
  "name":"liquibase.AbstractExtensibleObject",
  "queryAllPublicMethods":true
},
{
  "name":"liquibase.AbstractExtensibleObjectBeanInfo"
},
{
  "name":"liquibase.AbstractExtensibleObjectCustomizer"
},
{
  "name":"liquibase.ExtensibleObject",
  "queryAllPublicMethods":true
},
{
  "name":"liquibase.change.AbstractChange",
  "queryAllPublicMethods":true
},
{
  "name":"liquibase.change.AbstractChangeBeanInfo"
},
{
  "name":"liquibase.change.AbstractChangeCustomizer"
},
{
  "name":"liquibase.change.AbstractSQLChange",
  "queryAllPublicMethods":true,
  "methods":[{"name":"isSplitStatements","parameterTypes":[] }, {"name":"isStripComments","parameterTypes":[] }, {"name":"setSql","parameterTypes":["java.lang.String"] }]
},
{
  "name":"liquibase.change.AbstractSQLChangeBeanInfo"
},
{
  "name":"liquibase.change.AbstractSQLChangeCustomizer"
},
{
  "name":"liquibase.change.AbstractTableChange",
  "queryAllPublicMethods":true
},
{
  "name":"liquibase.change.AbstractTableChangeBeanInfo"
},
{
  "name":"liquibase.change.AbstractTableChangeCustomizer"
},
{
  "name":"liquibase.change.AddColumnConfig",
  "allDeclaredFields":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.change.Change",
  "queryAllPublicMethods":true
},
{
  "name":"liquibase.change.ChangeFactory",
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"<init>","parameterTypes":["liquibase.Scope"] }]
},
{
  "name":"liquibase.change.ChangeWithColumns",
  "queryAllPublicMethods":true
},
{
  "name":"liquibase.change.ColumnConfig",
  "allDeclaredFields":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.change.ConstraintsConfig",
  "allDeclaredFields":true
},
{
  "name":"liquibase.change.DbmsTargetedChange",
  "queryAllPublicMethods":true
},
{
  "name":"liquibase.change.core.AbstractModifyDataChange",
  "queryAllPublicMethods":true
},
{
  "name":"liquibase.change.core.AbstractModifyDataChangeBeanInfo"
},
{
  "name":"liquibase.change.core.AbstractModifyDataChangeCustomizer"
},
{
  "name":"liquibase.change.core.AddAutoIncrementChange",
  "queryAllPublicMethods":true
},
{
  "name":"liquibase.change.core.AddAutoIncrementChangeBeanInfo"
},
{
  "name":"liquibase.change.core.AddAutoIncrementChangeCustomizer"
},
{
  "name":"liquibase.change.core.AddColumnChange",
  "queryAllPublicMethods":true
},
{
  "name":"liquibase.change.core.AddColumnChangeBeanInfo"
},
{
  "name":"liquibase.change.core.AddColumnChangeCustomizer"
},
{
  "name":"liquibase.change.core.AddDefaultValueChange",
  "queryAllPublicMethods":true
},
{
  "name":"liquibase.change.core.AddDefaultValueChangeBeanInfo"
},
{
  "name":"liquibase.change.core.AddDefaultValueChangeCustomizer"
},
{
  "name":"liquibase.change.core.AddForeignKeyConstraintChange",
  "queryAllPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"getBaseColumnNames","parameterTypes":[] }, {"name":"getBaseTableCatalogName","parameterTypes":[] }, {"name":"getBaseTableName","parameterTypes":[] }, {"name":"getBaseTableSchemaName","parameterTypes":[] }, {"name":"getConstraintName","parameterTypes":[] }, {"name":"getDeferrable","parameterTypes":[] }, {"name":"getDeleteCascade","parameterTypes":[] }, {"name":"getInitiallyDeferred","parameterTypes":[] }, {"name":"getOnDelete","parameterTypes":[] }, {"name":"getOnUpdate","parameterTypes":[] }, {"name":"getReferencedColumnNames","parameterTypes":[] }, {"name":"getReferencedTableCatalogName","parameterTypes":[] }, {"name":"getReferencedTableName","parameterTypes":[] }, {"name":"getReferencedTableSchemaName","parameterTypes":[] }, {"name":"getReferencesUniqueColumn","parameterTypes":[] }, {"name":"getValidate","parameterTypes":[] }, {"name":"setBaseColumnNames","parameterTypes":["java.lang.String"] }, {"name":"setBaseTableCatalogName","parameterTypes":["java.lang.String"] }, {"name":"setBaseTableName","parameterTypes":["java.lang.String"] }, {"name":"setBaseTableSchemaName","parameterTypes":["java.lang.String"] }, {"name":"setConstraintName","parameterTypes":["java.lang.String"] }, {"name":"setDeferrable","parameterTypes":["java.lang.Boolean"] }, {"name":"setDeleteCascade","parameterTypes":["java.lang.Boolean"] }, {"name":"setInitiallyDeferred","parameterTypes":["java.lang.Boolean"] }, {"name":"setOnDelete","parameterTypes":["java.lang.String"] }, {"name":"setOnUpdate","parameterTypes":["java.lang.String"] }, {"name":"setReferencedColumnNames","parameterTypes":["java.lang.String"] }, {"name":"setReferencedTableCatalogName","parameterTypes":["java.lang.String"] }, {"name":"setReferencedTableName","parameterTypes":["java.lang.String"] }, {"name":"setReferencedTableSchemaName","parameterTypes":["java.lang.String"] }, {"name":"setReferencesUniqueColumn","parameterTypes":["java.lang.Boolean"] }, {"name":"setValidate","parameterTypes":["java.lang.Boolean"] }]
},
{
  "name":"liquibase.change.core.AddForeignKeyConstraintChangeBeanInfo"
},
{
  "name":"liquibase.change.core.AddForeignKeyConstraintChangeCustomizer"
},
{
  "name":"liquibase.change.core.AddLookupTableChange",
  "queryAllPublicMethods":true
},
{
  "name":"liquibase.change.core.AddLookupTableChangeBeanInfo"
},
{
  "name":"liquibase.change.core.AddLookupTableChangeCustomizer"
},
{
  "name":"liquibase.change.core.AddNotNullConstraintChange",
  "queryAllPublicMethods":true
},
{
  "name":"liquibase.change.core.AddNotNullConstraintChangeBeanInfo"
},
{
  "name":"liquibase.change.core.AddNotNullConstraintChangeCustomizer"
},
{
  "name":"liquibase.change.core.AddPrimaryKeyChange",
  "queryAllPublicMethods":true
},
{
  "name":"liquibase.change.core.AddPrimaryKeyChangeBeanInfo"
},
{
  "name":"liquibase.change.core.AddPrimaryKeyChangeCustomizer"
},
{
  "name":"liquibase.change.core.AddUniqueConstraintChange",
  "queryAllPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"getCatalogName","parameterTypes":[] }, {"name":"getClustered","parameterTypes":[] }, {"name":"getColumnNames","parameterTypes":[] }, {"name":"getConstraintName","parameterTypes":[] }, {"name":"getDeferrable","parameterTypes":[] }, {"name":"getDisabled","parameterTypes":[] }, {"name":"getForIndexCatalogName","parameterTypes":[] }, {"name":"getForIndexName","parameterTypes":[] }, {"name":"getForIndexSchemaName","parameterTypes":[] }, {"name":"getInitiallyDeferred","parameterTypes":[] }, {"name":"getSchemaName","parameterTypes":[] }, {"name":"getTableName","parameterTypes":[] }, {"name":"getTablespace","parameterTypes":[] }, {"name":"getValidate","parameterTypes":[] }, {"name":"setCatalogName","parameterTypes":["java.lang.String"] }, {"name":"setClustered","parameterTypes":["java.lang.Boolean"] }, {"name":"setColumnNames","parameterTypes":["java.lang.String"] }, {"name":"setConstraintName","parameterTypes":["java.lang.String"] }, {"name":"setDeferrable","parameterTypes":["java.lang.Boolean"] }, {"name":"setDisabled","parameterTypes":["java.lang.Boolean"] }, {"name":"setForIndexCatalogName","parameterTypes":["java.lang.String"] }, {"name":"setForIndexName","parameterTypes":["java.lang.String"] }, {"name":"setForIndexSchemaName","parameterTypes":["java.lang.String"] }, {"name":"setInitiallyDeferred","parameterTypes":["java.lang.Boolean"] }, {"name":"setSchemaName","parameterTypes":["java.lang.String"] }, {"name":"setTableName","parameterTypes":["java.lang.String"] }, {"name":"setTablespace","parameterTypes":["java.lang.String"] }, {"name":"setValidate","parameterTypes":["java.lang.Boolean"] }]
},
{
  "name":"liquibase.change.core.AddUniqueConstraintChangeBeanInfo"
},
{
  "name":"liquibase.change.core.AddUniqueConstraintChangeCustomizer"
},
{
  "name":"liquibase.change.core.AlterSequenceChange",
  "queryAllPublicMethods":true,
  "methods":[{"name":"isOrdered","parameterTypes":[] }]
},
{
  "name":"liquibase.change.core.AlterSequenceChangeBeanInfo"
},
{
  "name":"liquibase.change.core.AlterSequenceChangeCustomizer"
},
{
  "name":"liquibase.change.core.CreateIndexChange",
  "queryAllPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"getCatalogName","parameterTypes":[] }, {"name":"getClustered","parameterTypes":[] }, {"name":"getColumns","parameterTypes":[] }, {"name":"getIndexName","parameterTypes":[] }, {"name":"getSchemaName","parameterTypes":[] }, {"name":"getTableName","parameterTypes":[] }, {"name":"getTablespace","parameterTypes":[] }, {"name":"isUnique","parameterTypes":[] }, {"name":"setCatalogName","parameterTypes":["java.lang.String"] }, {"name":"setClustered","parameterTypes":["java.lang.Boolean"] }, {"name":"setIndexName","parameterTypes":["java.lang.String"] }, {"name":"setSchemaName","parameterTypes":["java.lang.String"] }, {"name":"setTableName","parameterTypes":["java.lang.String"] }, {"name":"setTablespace","parameterTypes":["java.lang.String"] }, {"name":"setUnique","parameterTypes":["java.lang.Boolean"] }]
},
{
  "name":"liquibase.change.core.CreateIndexChangeBeanInfo"
},
{
  "name":"liquibase.change.core.CreateIndexChangeCustomizer"
},
{
  "name":"liquibase.change.core.CreateProcedureChange",
  "queryAllPublicMethods":true,
  "methods":[{"name":"isRelativeToChangelogFile","parameterTypes":[] }]
},
{
  "name":"liquibase.change.core.CreateProcedureChangeBeanInfo"
},
{
  "name":"liquibase.change.core.CreateProcedureChangeCustomizer"
},
{
  "name":"liquibase.change.core.CreateSequenceChange",
  "queryAllPublicMethods":true,
  "methods":[{"name":"isOrdered","parameterTypes":[] }]
},
{
  "name":"liquibase.change.core.CreateSequenceChangeBeanInfo"
},
{
  "name":"liquibase.change.core.CreateSequenceChangeCustomizer"
},
{
  "name":"liquibase.change.core.CreateTableChange",
  "queryAllPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"getCatalogName","parameterTypes":[] }, {"name":"getColumns","parameterTypes":[] }, {"name":"getRemarks","parameterTypes":[] }, {"name":"getSchemaName","parameterTypes":[] }, {"name":"getTableName","parameterTypes":[] }, {"name":"getTablespace","parameterTypes":[] }, {"name":"setCatalogName","parameterTypes":["java.lang.String"] }, {"name":"setRemarks","parameterTypes":["java.lang.String"] }, {"name":"setSchemaName","parameterTypes":["java.lang.String"] }, {"name":"setTableName","parameterTypes":["java.lang.String"] }, {"name":"setTablespace","parameterTypes":["java.lang.String"] }]
},
{
  "name":"liquibase.change.core.CreateTableChangeBeanInfo"
},
{
  "name":"liquibase.change.core.CreateTableChangeCustomizer"
},
{
  "name":"liquibase.change.core.CreateViewChange",
  "queryAllPublicMethods":true
},
{
  "name":"liquibase.change.core.CreateViewChangeBeanInfo"
},
{
  "name":"liquibase.change.core.CreateViewChangeCustomizer"
},
{
  "name":"liquibase.change.core.DeleteDataChange",
  "queryAllPublicMethods":true
},
{
  "name":"liquibase.change.core.DeleteDataChangeBeanInfo"
},
{
  "name":"liquibase.change.core.DeleteDataChangeCustomizer"
},
{
  "name":"liquibase.change.core.DropAllForeignKeyConstraintsChange",
  "queryAllPublicMethods":true
},
{
  "name":"liquibase.change.core.DropAllForeignKeyConstraintsChangeBeanInfo"
},
{
  "name":"liquibase.change.core.DropAllForeignKeyConstraintsChangeCustomizer"
},
{
  "name":"liquibase.change.core.DropColumnChange",
  "queryAllPublicMethods":true
},
{
  "name":"liquibase.change.core.DropColumnChangeBeanInfo"
},
{
  "name":"liquibase.change.core.DropColumnChangeCustomizer"
},
{
  "name":"liquibase.change.core.DropDefaultValueChange",
  "queryAllPublicMethods":true
},
{
  "name":"liquibase.change.core.DropDefaultValueChangeBeanInfo"
},
{
  "name":"liquibase.change.core.DropDefaultValueChangeCustomizer"
},
{
  "name":"liquibase.change.core.DropForeignKeyConstraintChange",
  "queryAllPublicMethods":true
},
{
  "name":"liquibase.change.core.DropForeignKeyConstraintChangeBeanInfo"
},
{
  "name":"liquibase.change.core.DropForeignKeyConstraintChangeCustomizer"
},
{
  "name":"liquibase.change.core.DropIndexChange",
  "queryAllPublicMethods":true
},
{
  "name":"liquibase.change.core.DropIndexChangeBeanInfo"
},
{
  "name":"liquibase.change.core.DropIndexChangeCustomizer"
},
{
  "name":"liquibase.change.core.DropNotNullConstraintChange",
  "queryAllPublicMethods":true
},
{
  "name":"liquibase.change.core.DropNotNullConstraintChangeBeanInfo"
},
{
  "name":"liquibase.change.core.DropNotNullConstraintChangeCustomizer"
},
{
  "name":"liquibase.change.core.DropPrimaryKeyChange",
  "queryAllPublicMethods":true
},
{
  "name":"liquibase.change.core.DropPrimaryKeyChangeBeanInfo"
},
{
  "name":"liquibase.change.core.DropPrimaryKeyChangeCustomizer"
},
{
  "name":"liquibase.change.core.DropProcedureChange",
  "queryAllPublicMethods":true
},
{
  "name":"liquibase.change.core.DropProcedureChangeBeanInfo"
},
{
  "name":"liquibase.change.core.DropProcedureChangeCustomizer"
},
{
  "name":"liquibase.change.core.DropSequenceChange",
  "queryAllPublicMethods":true
},
{
  "name":"liquibase.change.core.DropSequenceChangeBeanInfo"
},
{
  "name":"liquibase.change.core.DropSequenceChangeCustomizer"
},
{
  "name":"liquibase.change.core.DropTableChange",
  "queryAllPublicMethods":true,
  "methods":[{"name":"isCascadeConstraints","parameterTypes":[] }]
},
{
  "name":"liquibase.change.core.DropTableChangeBeanInfo"
},
{
  "name":"liquibase.change.core.DropTableChangeCustomizer"
},
{
  "name":"liquibase.change.core.DropUniqueConstraintChange",
  "queryAllPublicMethods":true
},
{
  "name":"liquibase.change.core.DropUniqueConstraintChangeBeanInfo"
},
{
  "name":"liquibase.change.core.DropUniqueConstraintChangeCustomizer"
},
{
  "name":"liquibase.change.core.DropViewChange",
  "queryAllPublicMethods":true
},
{
  "name":"liquibase.change.core.DropViewChangeBeanInfo"
},
{
  "name":"liquibase.change.core.DropViewChangeCustomizer"
},
{
  "name":"liquibase.change.core.EmptyChange",
  "queryAllPublicMethods":true
},
{
  "name":"liquibase.change.core.EmptyChangeBeanInfo"
},
{
  "name":"liquibase.change.core.EmptyChangeCustomizer"
},
{
  "name":"liquibase.change.core.ExecuteShellCommandChange",
  "queryAllPublicMethods":true
},
{
  "name":"liquibase.change.core.ExecuteShellCommandChangeBeanInfo"
},
{
  "name":"liquibase.change.core.ExecuteShellCommandChangeCustomizer"
},
{
  "name":"liquibase.change.core.InsertDataChange",
  "queryAllPublicMethods":true
},
{
  "name":"liquibase.change.core.InsertDataChangeBeanInfo"
},
{
  "name":"liquibase.change.core.InsertDataChangeCustomizer"
},
{
  "name":"liquibase.change.core.LoadDataChange",
  "queryAllPublicMethods":true,
  "methods":[{"name":"isRelativeToChangelogFile","parameterTypes":[] }]
},
{
  "name":"liquibase.change.core.LoadDataChangeBeanInfo"
},
{
  "name":"liquibase.change.core.LoadDataChangeCustomizer"
},
{
  "name":"liquibase.change.core.LoadUpdateDataChange",
  "queryAllPublicMethods":true
},
{
  "name":"liquibase.change.core.LoadUpdateDataChangeBeanInfo"
},
{
  "name":"liquibase.change.core.LoadUpdateDataChangeCustomizer"
},
{
  "name":"liquibase.change.core.MergeColumnChange",
  "queryAllPublicMethods":true
},
{
  "name":"liquibase.change.core.MergeColumnChangeBeanInfo"
},
{
  "name":"liquibase.change.core.MergeColumnChangeCustomizer"
},
{
  "name":"liquibase.change.core.ModifyDataTypeChange",
  "queryAllPublicMethods":true
},
{
  "name":"liquibase.change.core.ModifyDataTypeChangeBeanInfo"
},
{
  "name":"liquibase.change.core.ModifyDataTypeChangeCustomizer"
},
{
  "name":"liquibase.change.core.OutputChange",
  "queryAllPublicMethods":true
},
{
  "name":"liquibase.change.core.OutputChangeBeanInfo"
},
{
  "name":"liquibase.change.core.OutputChangeCustomizer"
},
{
  "name":"liquibase.change.core.RawSQLChange",
  "queryAllPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.change.core.RawSQLChangeBeanInfo"
},
{
  "name":"liquibase.change.core.RawSQLChangeCustomizer"
},
{
  "name":"liquibase.change.core.RenameColumnChange",
  "queryAllPublicMethods":true
},
{
  "name":"liquibase.change.core.RenameColumnChangeBeanInfo"
},
{
  "name":"liquibase.change.core.RenameColumnChangeCustomizer"
},
{
  "name":"liquibase.change.core.RenameSequenceChange",
  "queryAllPublicMethods":true
},
{
  "name":"liquibase.change.core.RenameSequenceChangeBeanInfo"
},
{
  "name":"liquibase.change.core.RenameSequenceChangeCustomizer"
},
{
  "name":"liquibase.change.core.RenameTableChange",
  "queryAllPublicMethods":true
},
{
  "name":"liquibase.change.core.RenameTableChangeBeanInfo"
},
{
  "name":"liquibase.change.core.RenameTableChangeCustomizer"
},
{
  "name":"liquibase.change.core.RenameViewChange",
  "queryAllPublicMethods":true
},
{
  "name":"liquibase.change.core.RenameViewChangeBeanInfo"
},
{
  "name":"liquibase.change.core.RenameViewChangeCustomizer"
},
{
  "name":"liquibase.change.core.SQLFileChange",
  "queryAllPublicMethods":true,
  "methods":[{"name":"isRelativeToChangelogFile","parameterTypes":[] }]
},
{
  "name":"liquibase.change.core.SQLFileChangeBeanInfo"
},
{
  "name":"liquibase.change.core.SQLFileChangeCustomizer"
},
{
  "name":"liquibase.change.core.SetColumnRemarksChange",
  "queryAllPublicMethods":true
},
{
  "name":"liquibase.change.core.SetColumnRemarksChangeBeanInfo"
},
{
  "name":"liquibase.change.core.SetColumnRemarksChangeCustomizer"
},
{
  "name":"liquibase.change.core.SetTableRemarksChange",
  "queryAllPublicMethods":true
},
{
  "name":"liquibase.change.core.SetTableRemarksChangeBeanInfo"
},
{
  "name":"liquibase.change.core.SetTableRemarksChangeCustomizer"
},
{
  "name":"liquibase.change.core.StopChange",
  "queryAllPublicMethods":true
},
{
  "name":"liquibase.change.core.StopChangeBeanInfo"
},
{
  "name":"liquibase.change.core.StopChangeCustomizer"
},
{
  "name":"liquibase.change.core.TagDatabaseChange",
  "queryAllPublicMethods":true
},
{
  "name":"liquibase.change.core.TagDatabaseChangeBeanInfo"
},
{
  "name":"liquibase.change.core.TagDatabaseChangeCustomizer"
},
{
  "name":"liquibase.change.core.UpdateDataChange",
  "queryAllPublicMethods":true
},
{
  "name":"liquibase.change.core.UpdateDataChangeBeanInfo"
},
{
  "name":"liquibase.change.core.UpdateDataChangeCustomizer"
},
{
  "name":"liquibase.change.custom.CustomChangeWrapper",
  "queryAllPublicMethods":true
},
{
  "name":"liquibase.change.custom.CustomChangeWrapperBeanInfo"
},
{
  "name":"liquibase.change.custom.CustomChangeWrapperCustomizer"
},
{
  "name":"liquibase.changelog.StandardChangeLogHistoryService",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.configuration.LiquibaseConfiguration",
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"<init>","parameterTypes":["liquibase.Scope"] }]
},
{
  "name":"liquibase.database.jvm.JdbcConnection",
  "methods":[{"name":"getWrappedConnection","parameterTypes":[] }]
},
{
  "name":"liquibase.datatype.core.BigIntType",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.datatype.core.BlobType",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.datatype.core.BooleanType",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.datatype.core.CharType",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.datatype.core.DateTimeType",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.datatype.core.IntType",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.datatype.core.NumberType",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.datatype.core.VarcharType",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.executor.ExecutorService",
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"<init>","parameterTypes":["liquibase.Scope"] }]
},
{
  "name":"liquibase.executor.jvm.JdbcExecutor",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.hub.HubServiceFactory",
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"<init>","parameterTypes":["liquibase.Scope"] }]
},
{
  "name":"liquibase.license.LicenseServiceFactory",
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"<init>","parameterTypes":["liquibase.Scope"] }]
},
{
  "name":"liquibase.lockservice.StandardLockService",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.logging.core.LogServiceFactory",
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"<init>","parameterTypes":["liquibase.Scope"] }]
},
{
  "name":"liquibase.plugin.AbstractPlugin",
  "queryAllPublicMethods":true
},
{
  "name":"liquibase.plugin.AbstractPluginBeanInfo"
},
{
  "name":"liquibase.plugin.AbstractPluginCustomizer"
},
{
  "name":"liquibase.plugin.Plugin",
  "queryAllPublicMethods":true
},
{
  "name":"liquibase.pro.packaged.gy",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.pro.packaged.ms",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.pro.packaged.mt",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.serializer.AbstractLiquibaseSerializable",
  "allDeclaredFields":true
},
{
  "name":"liquibase.sql.visitor.AppendSqlVisitor",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.sql.visitor.PrependSqlVisitor",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.sql.visitor.RegExpReplaceSqlVisitor",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.sql.visitor.ReplaceSqlVisitor",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.maven.surefire.junitplatform.JUnitPlatformProvider",
  "methods":[{"name":"<init>","parameterTypes":["org.apache.maven.surefire.api.provider.ProviderParameters"] }]
},
{
  "name":"org.apiguardian.api.API",
  "queryAllPublicMethods":true
},
{
  "name":"org.eclipse.jetty.alpn.ALPN"
},
{
  "name":"org.eclipse.jetty.npn.NextProtoNego"
},
{
  "name":"org.h2.Driver"
},
{
  "name":"org.h2.mvstore.MVStore$TxCounter",
  "fields":[{"name":"counter"}]
},
{
  "name":"org.h2.mvstore.Page",
  "fields":[{"name":"pos"}]
},
{
  "name":"org.jooq.impl.SQLDataType"
},
{
  "name":"org.jooq.util.cubrid.CUBRIDDataType"
},
{
  "name":"org.jooq.util.derby.DerbyDataType"
},
{
  "name":"org.jooq.util.firebird.FirebirdDataType"
},
{
  "name":"org.jooq.util.h2.H2DataType"
},
{
  "name":"org.jooq.util.hsqldb.HSQLDBDataType"
},
{
  "name":"org.jooq.util.ignite.IgniteDataType"
},
{
  "name":"org.jooq.util.mariadb.MariaDBDataType"
},
{
  "name":"org.jooq.util.mysql.MySQLDataType"
},
{
  "name":"org.jooq.util.postgres.PostgresDataType"
},
{
  "name":"org.jooq.util.sqlite.SQLiteDataType"
},
{
  "name":"org.jooq.util.yugabytedb.YugabyteDBDataType"
},
{
  "name":"org.junit.ComparisonFailure",
  "fields":[{"name":"fActual"}, {"name":"fExpected"}]
},
{
  "name":"org.junit.internal.AssumptionViolatedException"
},
{
  "name":"org.junit.jupiter.api.Test",
  "queryAllPublicMethods":true
},
{
  "name":"org.junit.platform.commons.annotation.Testable",
  "queryAllPublicMethods":true
},
{
  "name":"org.junit.platform.launcher.LauncherSession",
  "methods":[{"name":"getLauncher","parameterTypes":[] }]
},
{
  "name":"org.junit.platform.launcher.core.LauncherFactory",
  "methods":[{"name":"openSession","parameterTypes":[] }]
},
{
  "name":"org.locationtech.jts.geom.Geometry"
},
{
  "name":"org.robolectric.Robolectric"
},
{
  "name":"sun.misc.Unsafe",
  "allDeclaredFields":true,
  "methods":[{"name":"arrayBaseOffset","parameterTypes":["java.lang.Class"] }, {"name":"arrayIndexScale","parameterTypes":["java.lang.Class"] }, {"name":"copyMemory","parameterTypes":["long","long","long"] }, {"name":"copyMemory","parameterTypes":["java.lang.Object","long","java.lang.Object","long","long"] }, {"name":"getAndAddLong","parameterTypes":["java.lang.Object","long","long"] }, {"name":"getAndSetObject","parameterTypes":["java.lang.Object","long","java.lang.Object"] }, {"name":"getBoolean","parameterTypes":["java.lang.Object","long"] }, {"name":"getByte","parameterTypes":["long"] }, {"name":"getByte","parameterTypes":["java.lang.Object","long"] }, {"name":"getDouble","parameterTypes":["java.lang.Object","long"] }, {"name":"getFloat","parameterTypes":["java.lang.Object","long"] }, {"name":"getInt","parameterTypes":["long"] }, {"name":"getInt","parameterTypes":["java.lang.Object","long"] }, {"name":"getLong","parameterTypes":["long"] }, {"name":"getLong","parameterTypes":["java.lang.Object","long"] }, {"name":"getObject","parameterTypes":["java.lang.Object","long"] }, {"name":"invokeCleaner","parameterTypes":["java.nio.ByteBuffer"] }, {"name":"objectFieldOffset","parameterTypes":["java.lang.reflect.Field"] }, {"name":"putBoolean","parameterTypes":["java.lang.Object","long","boolean"] }, {"name":"putByte","parameterTypes":["long","byte"] }, {"name":"putByte","parameterTypes":["java.lang.Object","long","byte"] }, {"name":"putDouble","parameterTypes":["java.lang.Object","long","double"] }, {"name":"putFloat","parameterTypes":["java.lang.Object","long","float"] }, {"name":"putInt","parameterTypes":["long","int"] }, {"name":"putInt","parameterTypes":["java.lang.Object","long","int"] }, {"name":"putLong","parameterTypes":["long","long"] }, {"name":"putLong","parameterTypes":["java.lang.Object","long","long"] }, {"name":"putObject","parameterTypes":["java.lang.Object","long","java.lang.Object"] }, {"name":"storeFence","parameterTypes":[] }]
},
{
  "name":"sun.nio.ch.SelectorImpl",
  "fields":[{"name":"publicSelectedKeys"}, {"name":"selectedKeys"}]
},
{
  "name":"sun.security.pkcs12.PKCS12KeyStore",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.pkcs12.PKCS12KeyStore$DualFormatPKCS12",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.provider.DSA$SHA1withDSA",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.provider.DSA$SHA224withDSA",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.provider.DSA$SHA256withDSA",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.provider.DSAKeyFactory",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.provider.DSAParameters",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.provider.MD5",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.provider.NativePRNG",
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"<init>","parameterTypes":["java.security.SecureRandomParameters"] }]
},
{
  "name":"sun.security.provider.NativePRNG$Blocking",
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"<init>","parameterTypes":["java.security.SecureRandomParameters"] }]
},
{
  "name":"sun.security.provider.SHA",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.provider.SHA2$SHA224",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.provider.SHA2$SHA256",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.provider.SHA5$SHA384",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.provider.SHA5$SHA512",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.provider.SecureRandom",
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"<init>","parameterTypes":["java.security.SecureRandomParameters"] }]
},
{
  "name":"sun.security.provider.X509Factory",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.rsa.PSSParameters",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.rsa.RSAKeyFactory$Legacy",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.rsa.RSAPSSSignature",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.rsa.RSASignature$SHA224withRSA",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.rsa.RSASignature$SHA256withRSA",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.ssl.SSLContextImpl$TLSContext",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.ssl.TrustManagerFactoryImpl$PKIXFactory",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.util.ObjectIdentifier"
},
{
  "name":"sun.security.x509.AuthorityInfoAccessExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
},
{
  "name":"sun.security.x509.AuthorityKeyIdentifierExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
},
{
  "name":"sun.security.x509.BasicConstraintsExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
},
{
  "name":"sun.security.x509.CRLDistributionPointsExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
},
{
  "name":"sun.security.x509.CertificateExtensions"
},
{
  "name":"sun.security.x509.CertificatePoliciesExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
},
{
  "name":"sun.security.x509.ExtendedKeyUsageExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
},
{
  "name":"sun.security.x509.IssuerAlternativeNameExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
},
{
  "name":"sun.security.x509.KeyUsageExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
},
{
  "name":"sun.security.x509.NetscapeCertTypeExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
},
{
  "name":"sun.security.x509.PrivateKeyUsageExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
},
{
  "name":"sun.security.x509.SubjectAlternativeNameExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
},
{
  "name":"sun.security.x509.SubjectKeyIdentifierExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
}
]

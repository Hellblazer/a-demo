
approaches(approach) ::= <<
approaches:
  - hostName: localHost
    port: <approach>
>>

seeds(seedId, seed) ::= <<
seeds:
  - identifier: <seedId>
    endpoint:
        hostName: localHost
        port: <seed>
>>

sky(clusterPort, apiPort, memberId, seedPort, n, k, approachPort, approach, seedId, genesis) ::= <<

<if(approach)><approaches(approach = approach)>
<endif>

<if(seedPort)><seeds(seedId = seedId, seed = seedPort)>
<endif>

viewGossipDuration: PT0H0M00.01S

choamParameters:
  generateGenesis: <genesis>
  checkpointBlockDelta: 50
  gossipDuration: PT0H0M00.01S
  synchronizationCycles: 10
  regenerationCycles: 10

producerParameters:
  maxBatchByteSize: 10485760
  maxBatchCount: 3000
  gossipDuration: PT0H0M00.01S
  ethereal:
    epochLength: 20

clusterEndpoint:
  hostName: localhost
  port: <clusterPort>

apiEndpoint:
  hostName: localhost
  port: <apiPort>

approachEndpoint:
  hostName: localhost
  port: <approachPort>

shamir:
    shares: <n>
    threshold: <k>

domain:
  dbURL: "jdbc:h2:mem:sql-<memberId>;DB_CLOSE_DELAY=-1"
  dhtOperationsTimeout: PT0H0M10S
  dhtDbUrl: "jdbc:h2:mem:dht-<memberId>;DB_CLOSE_DELAY=-1"
  checkpointBaseDir: ./target/e2e/cp
  dhtOpsFrequency: PT0H0M00.01S
  dhtFpr: 0.000125
  dhtEventValidTO: PT0H0M30S
  dhtBias: 3
  jdbcMaxConnections: 10
  dhtPbyz: 0.01

identity:
  keyStore: "target/e2e/<memberId>.id"
  keyStoreType: JCEKS
  kerlURL: "jdbc:h2:file:./target/e2e/kerl-state-<memberId>"
  identityFile: "target/e2e/<memberId>.digest"
  digestAlgorithm: BLAKE2B_256
  signatureAlgorithm: ED_25519
  encryptionAlgorithm: X_25519
>>
